// Recursive layout
const BITWISE_RATIO: felt252 = 8;
const BITWISE_TOTAL_N_BITS: felt252 = 251;
const C_PRIME_AS_UINT256_HIGH: u128 = 329648542954659146201578277794459156480; // 31 * 0x8000000000000110000000000000000;
const C_PRIME_AS_UINT256_LOW: u128 = 31;
const CONSTRAINT_DEGREE: u32 = 2;
const CPU_COMPONENT_HEIGHT: felt252 = 16;
const DILUTED_N_BITS: felt252 = 16;
const DILUTED_SPACING: felt252 = 4;
const FIELD_GENERATOR_INVERSE: felt252 = 1206167596222043737899107594365023368541035738443865566657697352045290673494;
const FIELD_GENERATOR: felt252 = 3;
const HAS_BITWISE_BUILTIN: felt252 = 1;
const HAS_DILUTED_POOL: felt252 = 1;
const HAS_EC_OP_BUILTIN: felt252 = 0;
const HAS_ECDSA_BUILTIN: felt252 = 0;
const HAS_KECCAK_BUILTIN: felt252 = 0;
const HAS_OUTPUT_BUILTIN: felt252 = 1;
const HAS_PEDERSEN_BUILTIN: felt252 = 1;
const HAS_POSEIDON_BUILTIN: felt252 = 0;
const HAS_RANGE_CHECK_BUILTIN: felt252 = 1;
const IS_DYNAMIC_AIR: felt252 = 0;
const LAYOUT_CODE: felt252 = 0x726563757273697665;
const LOG_CPU_COMPONENT_HEIGHT: felt252 = 4;
const MASK_SIZE: felt252 = 133;
const MEMORY_STEP: felt252 = 2;
const MONTGOMERY_R_INVERSE: felt252 = 113078212145816603762751633895895194930089271709401121343797004406777446400;
const MONTGOMERY_R: felt252 = 3618502788666127798953978732740734578953660990361066340291730267701097005025; // 2**256 % STARK_PRIME
const N_CONSTRAINTS: felt252 = 93;
const N_DYNAMIC_PARAMS: felt252 = 0;
const NUM_COLUMNS_FIRST: u32 = 7;
const NUM_COLUMNS_SECOND: u32 = 3;
const PEDERSEN_BUILTIN_RATIO: felt252 = 128;
const PEDERSEN_BUILTIN_REPETITIONS: felt252 = 1;
const PUBLIC_MEMORY_STEP: felt252 = 16;
const RC_BUILTIN_RATIO: felt252 = 8;
const RC_N_PARTS: felt252 = 8;
const STARK_PRIME_MINUS_ONE: felt252 = 3618502788666131213697322783095070105623107215331596699973092056135872020480;
const STARK_PRIME_MINUS_TWO: felt252 = 3618502788666131213697322783095070105623107215331596699973092056135872020479;
const STARK_PRIME: u256 = 3618502788666131213697322783095070105623107215331596699973092056135872020481;


mod segments {
    const PROGRAM: usize = 0;
    const EXECUTION: usize = 1;
    const OUTPUT: usize = 2;
    const PEDERSEN: usize = 3;
    const RANGE_CHECK: usize = 4;
    const BITWISE: usize = 5;
    const N_SEGMENTS: usize = 6;
}
